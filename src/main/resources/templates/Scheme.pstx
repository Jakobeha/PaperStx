Expr = Def | Val

Exprs
-
- [Expr] [Exprs]

Def
- (define [+ValId] [Val])
- (define ([+ValId] [+ValIds])
     [Exprs]
     [Val])

Val = ValId | Number | Function | Quote

Vals
-
- [Val] [Vals]

ValId
+ {[^()\[\]\{\}'`,";]+}

ValIds
-
- [ValId] [ValIds]

Number
- {[0-9]+}
- {[0-9]+}/{[0-9]+}

Function
- ([Val] [Vals])

Quote
- '[SExpr]

SExpr = ValId | Number | SList | Quote

SExprs
-
- [SExpr] [SExprs]

SList
- ([SExprs])